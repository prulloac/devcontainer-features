name: "CI - Test Features"
on:
  push:
    branches:
      - main
    paths:
      - "src/**/*.sh"
      - "src/**/devcontainer-feature.json"
  pull_request:
  workflow_dispatch:
  schedule: # every three days
    - cron: "0 0 */3 * *"

jobs:
  test-autogenerated:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - bun
          - chezmoi
          - commitizen
          - deno
          - gitlint
          - latex
          - lua
          - ollama
          - pre-commit
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - bun
          - chezmoi
          - commitizen
          - deno
          - gitlint
          - latex
          - lua
          - ollama
          - pre-commit
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
